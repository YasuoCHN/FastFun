package com.klw.fastfun.pay.view.app.http;

import java.util.HashMap;
import java.util.Map;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.klw.fastfun.pay.common.tool.HttpTool;
import com.klw.fastfun.pay.common.tool.xdzf.MD5;
import com.klw.fastfun.pay.view.app.other.qmdyuril.PaySignUtil;
import com.klw.fastfun.pay.view.app.wxpay.utils.MD5Utils;
import com.klw.fastfun.pay.view.app.wxpay.utils.PayUtil;

public class WithdrawHelper {
	public static String getSMSCode(Map<String, String> reqMap) {
		String spId = (String) reqMap.get("spid");
		if ("sd85".equals(spId)) {
			// 金海哲代付
			return withdraw1(reqMap);
		} else if ("sd90".equals(spId)) {
			// 外放加冕QQ钱包
			return withdraw2(reqMap);
		} else if ("sd92".equals(spId)) {
			// 拙歌代付
			return withdraw3(reqMap);
		} else if ("sd95".equals(spId)) {
			// 全名点游
			return withdraw4(reqMap);
		} else if ("sd96".equals(spId)) {
			// MMSP
			return withdraw5(reqMap);
		} else {
			return "error";
		}

	}

	private static String withdraw5(Map<String, String> map) {

		return null;
	}

	private static String withdraw4(Map<String, String> map) {
		// TODO Auto-generated method stub
		return null;
	}

	private static String withdraw3(Map<String, String> map) {
		// TODO Auto-generated method stub
		return null;
	}

	// 外放加冕QQ钱包
	private static String withdraw2(Map<String, String> reqMap) {
		// keyword:D0+01 代付类型 额度+卡账户类型
		String sms = "error";
		String mid = reqMap.get("merNo");// 商户号
		String orderNo = reqMap.get("orderNo");// 订单号
		int amount = Integer.valueOf(reqMap.get("amount")) / 100;// 提现金额
		String receiveName = reqMap.get("bankUserName");// 收款人姓名
		String openProvince = reqMap.get("openProvince");// 开户省
		String openCity = reqMap.get("openCity");// 开户市
		String bankCode = reqMap.get("bankType");// 银行类型
		String bankBranchName = reqMap.get("bankBranchName");
		;// 支行名称
		String cardNo = reqMap.get("bankAccount");// 卡号
		String tmp[] = reqMap.get("keyWord").split("#");
		String type = tmp[0];// 代付类型 额度
		String cardAccountType = tmp[1];// 卡账户类型
		String noise = PayUtil.getNonceStr().substring(0, 10);
		// 生成随机字符串
		String key = reqMap.get("key");

		Map<String, String> map = new HashMap<String, String>();
		map.put("mid", mid);
		map.put("orderNo", orderNo);
		map.put("amount", String.valueOf(amount));
		map.put("receiveName", receiveName);
		map.put("openProvince", openProvince);
		map.put("openCity", openCity);
		map.put("bankCode", bankCode);
		map.put("bankBranchName", bankBranchName);
		map.put("cardNo", cardNo);
		map.put("type", type);
		map.put("cardAccountType", cardAccountType);
		map.put("noise", noise);
		String stringA = PaySignUtil.getParamStr2(map);
		String stringSignTemp = stringA + "&" + key;
		String sign = null;
		try {
			sign = MD5.md532(stringSignTemp).toUpperCase();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String reqResult = HttpTool.sendPost(reqMap.get("url"), stringSignTemp
				+ "&sign=" + sign);
		if (reqResult != null && reqResult.length() > 0) {
			JSONObject json = JSONObject.parseObject(reqResult);

			Map<String, String> resultMap = new HashMap<String, String>();
			for (Map.Entry<String, Object> entry : json.entrySet()) {
				String value = entry.getValue() + "";
				resultMap.put(entry.getKey(), value);
			}
			String signValue = PaySignUtil.getParamStr2(resultMap);
			String code = json.getString("code");
			if ("FAIL".equals(code)) {
				// 退款，修改订单状态

			} else if ("SUCCESS".equals(code)) {
				// 处理中，修改订单状态
				String resultSign = json.getString("sign");
				// 操作状态 0 新建未处理 1处理中 2处理成功 3处理失败4修改明细失败5没有收到返回值9异常状态
				// 交易状态:1：受理中
				// 3：代付成功
				// 4：代付失败
				String mySign = null;
				try {
					mySign = MD5.md532(signValue + "&" + key).toUpperCase();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				if (mySign.equals(resultSign)) {
					Map<String,Object> successMap=new HashMap<String,Object>();
					String transState = json.getString("transState");
					if (transState == null) {
						// 退款，修改订单状态
						reqMap.put("operationStatus", "-1");
						return sms;
					} else if ("4".equals(transState)) {
						// 退款，修改订单状态
						reqMap.put("operationStatus", "-1");
						return sms;
					} else if ("3".equals(transState)) {
						// 代付成功
						reqMap.put("operationStatus", "2");
						successMap.put("codeMessage","代付成功");
					} else if ("1".equals(transState)) {
						// 受理中
						reqMap.put("operationStatus", "1");
						successMap.put("codeMessage","申请中");
						successMap.put("orderNo",orderNo);
					}
					successMap.put("amount",amount);
					successMap.put("code","SUCCESS");
					successMap.put("orderNo",orderNo);
					return JSON.toJSONString(successMap);
				}
			}
		}
		System.out.println(reqResult);
		return sms;
	}

	private static String withdraw1(Map<String, String> map) {
		// TODO Auto-generated method stub
		return null;
	}

}
